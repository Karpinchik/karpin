# Задачи № 1, 2, 3.

def addition():                                          # сложение
    print(int(number[1]) + int(number[2]))

def subtraction():                                       # вычитание
    print(int(number[1]) - int(number[2]))

def multiplication():                                    # умножение
    print(int(number[1]) * int(number[2]))

def division():                                          # деление
    try:
        print(int(number[1]) / int(number[2]))
    except ZeroDivisionError:
        print("Ошибка! Деление на 0.")
    except ValueError:
        print("Ошибка! Деление строк.")

def arithmetic_operation():
    assert len(number) == 3, "Неверное количество аргументов"
    assert number[0] in ["+", "-", "*", "/"]
    if number[0] == "+":
        addition()
    elif number[0] == "-":
        subtraction()
    elif number[0] == "*":
        multiplication()
    elif number[0] == "/":
        division()
    else:
        print("Мы ограничены условием задания в выборе арифметических операций.")

print("Программа принимает вводимые значения только однозначные числа. От 0 до 9!")
number = list(input("Введите Польскую нотацию: "))
arithmetic_operation()



Задача № 4

#  Каталог документов
documents = [
    {"type": "passport", "number": "2207 876234", "name": "Василий Гупкин"},
    {"type": "invoice", "number": "11-2", "name": "Геннадий Покемонов"},
    {"type": "insurance", "number": "10006", "name": "Аристарх Павлов"}
]

# Перечень полок
directories = {
    "1": ["2207 876234", "11-2"],
    "2": ["10006"],
    "3": []
}

# p – people – команда, которая спросит номер документа и выведет имя человека, которому он принадлежит;
# l– list – команда, которая выведет список всех документов в формате passport "2207 876234" "Василий Гупкин";
# s – shelf – команда, которая спросит номер документа и выведет номер полки, на которой он находится;
# a – add – команда, которая добавит новый документ в каталог и в перечень полок, спросив его номер, тип, имя владельца и номер полки, на котором он будет храниться.
# n - команда вывода имен с учетом проверки на наличие ключа "name"

# функция для команды - p
def output_people():
  i = False
  request_number_people = input("Введите номер документа: ")
  for human in documents:
    if request_number_people == human["number"]:
      i = True
      break
  if i == True:  
    print(human["name"])
  if  i == False:
    print("Номер", request_number_people, "никому не принадлежит.")
      # break

# функция для команды - l
def output_list_documents():
  for human in documents:
     print(human.get("type"), human.get("number"), human.get("name"))

# функция для команды - s
def output_shelf():
  request_number_shelf = input("Введите номер документа: ")
  for shelf, values in directories.items():
    if request_number_shelf in values:
      print("Номер полки:", shelf)
      break
  else:
    print("Номер", request_number_shelf, "никому не принадлежит.")
    # break

#  функция вывода имен
def output_name():
    try:
      "name", "number" in documents
    except KeyError:
      print("Такого ключа нет.")
    for human in documents:  
      print(human.get("name"))

# функция для команды - a
def output_add():
  type_new = input("Введите новый тип: ")
  number_new = input("Введите новый номер: ")
  name_new = input("Введите новое имя: ")
  number_shelf_new = input("Введите номер полки: ")

  di = {"type": type_new, "number": number_new, "name": name_new}
  if number_shelf_new == "1":
    documents.append(di)
    directories["1"].append(number_new)
    print(directories)
    print(documents)
  elif number_shelf_new == "2":
    documents.append(di)
    directories["2"].append(number_new)
    print(directories)
    print(documents)
  elif number_shelf_new == "3":
    documents.append(di)
    directories["3"].append(number_new)
    print(directories)
    print(documents)
  else:
    print("Такой полки не существует!")


def request():
  request_command = input("Введите команду: ")
  if request_command == "p":
    output_people()
  elif request_command == "l":
    output_list_documents()
  elif request_command == "s":
    output_shelf()
  elif request_command == "a":
    output_add()
  elif request_command == "n":
    output_name()  
  else:
    print("Используйте только предложенные команды!")

request()    



